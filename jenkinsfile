pipeline {
    agent any

    environment {
        FLUTTER_HOME = '/opt/flutter'
        ANDROID_HOME = '/opt/android-sdk'
        PATH = "$FLUTTER_HOME/bin:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$PATH"
        APP_BUNDLE_PATH = 'build/app/outputs/bundle/release/app-release.aab'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/AshwinRamana/demo_project.git'
            }
        }

        stage('Flutter Build') {
            steps {
                sh 'flutter pub get'
                
                // Update version number
                script {
                    def pubspecFile = readFile 'pubspec.yaml'
                    def newVersion = "1.0.${env.BUILD_NUMBER}"
                    pubspecFile = pubspecFile.replaceAll("version: ([0-9]+\\.[0-9]+\\.)([0-9]+)(\\+[0-9]+)?", "version: ${newVersion}+${env.BUILD_NUMBER}")
                    writeFile file: 'pubspec.yaml', text: pubspecFile
                }
                
                // Build app bundle
                sh 'flutter build appbundle --release'
            }
        }

        stage('Setup Fastlane') {
            steps {
                // Ensure Fastfile exists and has correct settings
                sh '''
                    cd android
                    
                    # Setup Appfile with proper credentials path
                    cat > fastlane/Appfile << 'EOF'
json_key_file("./credentials/play-store-key.json")
package_name("com.demo_project")
EOF
                    
                    # Make sure no Gemfile exists (to avoid bundle exec requirement)
                    if [ -f "Gemfile" ]; then
                        mv Gemfile Gemfile.bak
                    fi
                    
                    # Ensure credentials directory exists
                    mkdir -p credentials
                    
                    # Set proper permissions
                    chmod 600 credentials/play-store-key.json || true
                '''
            }
        }

        stage('Upload to Play Store') {
            steps {
                sh '''
                    export FASTLANE_DISABLE_INTERACTIVE=true
                    export PATH="/home/linuxbrew/.linuxbrew/Cellar/fastlane/2.227.1/bin:$PATH"
                    cd android
                    
                    # Force yes to all prompts
                    echo y | fastlane android deploy --verbose
                '''
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: "${APP_BUNDLE_PATH}", allowEmptyArchive: true
            cleanWs()
        }
    }
}